// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let varifier = artifacts.require('verifier');
let proof = require('./proof')

contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    describe('Test verification generated by zokrates', function () {
        beforeEach(async function () { 
            console.log("Address 1: " + account_one);
            this.contract = await varifier.new({from: account_one});
        })

        it('Test verification with correct proof', async function () { 
          //GIVEN
          let expectedResult = true;

          //WHEN
          let actualResult = await this.contract.verifyTx(
              proof.proof.a,
              proof.proof.b,
              proof.proof.c,
              proof.inputs,
              {from: account_one}
          );

          //THEN
          assert.equal(expectedResult,actualResult);
        })

        it('Test verification with incorrect proof', async function () { 

          //GIVEN
          let expectedResult = false;
           let randomInputs = [5,1];


          //WHEN
          let actualResult = await this.contract.verifyTx(
              proof.proof.a,
              proof.proof.b,
              proof.proof.c,
              randomInputs,
              {from: account_one}
          );

          //THEN
          assert.equal(expectedResult,actualResult);
        })

       
    });
});